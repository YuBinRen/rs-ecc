import galois as g
import reed_solomon as rs

GF = g.Field(reversed([1, 0, 0, 0, 1, 1, 1, 0, 1]), p=2)
gen = rs.generator(GF, 4)


def test_gen():
    assert gen == g.Polynomial(GF, [0x40, 0x78, 0x36, 0x0f, 1])


def test_encode():
    data = [0x56, 0x34, 0x12]
    r = rs.encode(data, gen)
    assert r == data + [0xd9, 0x78, 0xe6, 0x37]

    msg = [0x40, 0xd2, 0x75, 0x47, 0x76, 0x17, 0x32, 0x06,
           0x27, 0x26, 0x96, 0xc6, 0xc6, 0x96, 0x70, 0xec][::-1]

    f = rs.encode(msg, rs.generator(GF, 10))
    assert f == msg + [
        0xbc, 0x2a, 0x90, 0x13, 0x6b, 0xaf, 0xef, 0xfd, 0x4b, 0xe0
    ][::-1]
